import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { API_URL } from "@/env";
import UserAPI from "./routes/users";
import AuthAPI from "./routes/auth";
import ServicesAPI from "./routes/services";
import AppointmentAPI from "./routes/appointment";
import FeedbackAPI from "./routes/feedback";
import TransactionAPI from "./routes/transaction";
import CommentAPI from "./routes/comment";
import ProductAPI from "./routes/product";
import deliveryAPI from "./routes/delivery";
import brandAPI from "./routes/brand";
import timeAPI from "./routes/time";
import ScheduleAPI from "./routes/schedule";
import IngrediantAPI from "./routes/ingredient";
import OptionApi from "./routes/option";
import ExclusionAPI from "./routes/exclusion";
import MonthAPI from "./routes/month";

import { API, TAGS, RESOURCE } from "@/constants";

const prepareHeaders = (headers, { getState }) => {
  if (getState()?.auth?.authenticated)
    headers.set("authorization", `Bearer ${getState()?.auth?.token || ""}`);

  headers.set("accept", `application/json`);
  return headers;
};

const baseQuery = fetchBaseQuery({
  baseUrl: API_URL,
  credentials: RESOURCE.INCLUDE,
  prepareHeaders,
});

export const api = createApi({
  reducerPath: TAGS.API,
  baseQuery,
  tagTypes: API.TAGS,
  keepUnusedDataFor: 0,
  endpoints: (builder) => ({
    login: AuthAPI.login(builder),
    logout: AuthAPI.logout(builder),
    getUsers: UserAPI.get(builder),
    getUserById: UserAPI.getById(builder),
    addUser: UserAPI.add(builder),
    updateUser: UserAPI.updateById(builder),
    deleteUser: UserAPI.deleteById(builder),
    confirmUser: UserAPI.confirmUser(builder),
    forgotPassword: UserAPI.forgotPassword(builder),
    resetPassword: UserAPI.resetPassword(builder),
    updateUserPassword: UserAPI.updatePasswordById(builder),
    getServices: ServicesAPI.get(builder),
    getServiceById: ServicesAPI.getById(builder),
    addService: ServicesAPI.add(builder),
    updateService: ServicesAPI.updateById(builder),
    deleteService: ServicesAPI.deleteById(builder),
    getAppointments: AppointmentAPI.get(builder),
    getAppointmentById: AppointmentAPI.getById(builder),
    addAppointment: AppointmentAPI.add(builder),
    updateAppointment: AppointmentAPI.updateById(builder),
    confirmAppointment: AppointmentAPI.confirmAppointment(builder),
    updateScheduleAppointment: AppointmentAPI.updateScheduleById(builder),
    cancelAppointment: AppointmentAPI.cancelAppointment(builder),
    deleteAppointment: AppointmentAPI.deleteById(builder),
    getFeedbacks: FeedbackAPI.get(builder),
    getFeedbackById: FeedbackAPI.getById(builder),
    addFeedback: FeedbackAPI.add(builder),
    updateFeedback: FeedbackAPI.updateById(builder),
    deleteFeedback: FeedbackAPI.deleteById(builder),
    getTransactions: TransactionAPI.get(builder),
    getTransactionById: TransactionAPI.getById(builder),
    updateTransaction: TransactionAPI.updateById(builder),
    deleteTransaction: TransactionAPI.deleteById(builder),
    getComments: CommentAPI.get(builder),
    getCommentById: CommentAPI.getById(builder),
    addComment: CommentAPI.add(builder),
    updateComment: CommentAPI.updateById(builder),
    deleteComment: CommentAPI.deleteById(builder),
    getProducts: ProductAPI.get(builder),
    getProductById: ProductAPI.getById(builder),
    addProduct: ProductAPI.add(builder),
    updateProduct: ProductAPI.updateById(builder),
    deleteProduct: ProductAPI.deleteById(builder),
    getDeliveries: deliveryAPI.get(builder),
    getDeliveryById: deliveryAPI.getById(builder),
    addDelivery: deliveryAPI.add(builder),
    updateDelivery: deliveryAPI.updateById(builder),
    deleteDelivery: deliveryAPI.deleteById(builder),
    getAppointmentByBeauticianId:
      AppointmentAPI.getAppointmentByBeauticianId(builder),
    getAppointmentHistoryByBeauticianId:
      AppointmentAPI.getAppointmentHistoryByBeauticianId(builder),
    getBrands: brandAPI.get(builder),
    getBrandById: brandAPI.getById(builder),
    addBrand: brandAPI.add(builder),
    updateBrand: brandAPI.updateById(builder),
    deleteBrand: brandAPI.deleteById(builder),
    getTimes: timeAPI.get(builder),
    getTimeById: timeAPI.getById(builder),
    addTime: timeAPI.add(builder),
    updateTime: timeAPI.updateById(builder),
    deleteTime: timeAPI.deleteById(builder),
    getSchedules: ScheduleAPI.get(builder),
    getScheduleById: ScheduleAPI.getById(builder),
    addSchedule: ScheduleAPI.add(builder),
    updateSchedule: ScheduleAPI.updateById(builder),
    confirmSchedule: ScheduleAPI.confirmSchedule(builder),
    deleteConfirmSchedule: ScheduleAPI.deleteConfirmById(builder),
    deleteSchedule: ScheduleAPI.deleteById(builder),
    updateAbsent: ScheduleAPI.updateAbsentById(builder),
    getIngredients: IngrediantAPI.get(builder),
    getIngredientById: IngrediantAPI.getById(builder),
    addIngredient: IngrediantAPI.add(builder),
    updateIngredient: IngrediantAPI.updateById(builder),
    deleteIngredient: IngrediantAPI.deleteById(builder),
    getOptions: OptionApi.get(builder),
    getOptionById: OptionApi.getById(builder),
    addOption: OptionApi.add(builder),
    updateOption: OptionApi.updateById(builder),
    deleteOption: OptionApi.deleteById(builder),
    getExclusions: ExclusionAPI.get(builder),
    getExclusionById: ExclusionAPI.getById(builder),
    addExclusion: ExclusionAPI.add(builder),
    updateExclusion: ExclusionAPI.updateById(builder),
    deleteExclusion: ExclusionAPI.deleteById(builder),
    getMonths: MonthAPI.get(builder),
    getMonthById: MonthAPI.getById(builder),
    addMonth: MonthAPI.add(builder),
    updateMonth: MonthAPI.updateById(builder),
    deleteMonth: MonthAPI.deleteById(builder),
    updateBeauticianAppointment: AppointmentAPI.updateBeauticianAppointment(builder),
    getRescheduleAppointmentById: AppointmentAPI.getRescheduleAppointmentById(builder),
  }),
});

export const {
  useGetUsersQuery,
  useGetUserByIdQuery,
  useAddUserMutation,
  useUpdateUserMutation,
  useDeleteUserMutation,
  useConfirmUserMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
  useUpdateUserPasswordMutation,
  useLoginMutation,
  useLogoutMutation,
  useGetServicesQuery,
  useGetServiceByIdQuery,
  useAddServiceMutation,
  useUpdateServiceMutation,
  useDeleteServiceMutation,
  useGetAppointmentsQuery,
  useGetAppointmentByIdQuery,
  useAddAppointmentMutation,
  useUpdateAppointmentMutation,
  useConfirmAppointmentMutation,
  useUpdateScheduleAppointmentMutation,
  useCancelAppointmentMutation,
  useDeleteAppointmentMutation,
  useGetFeedbacksQuery,
  useGetFeedbackByIdQuery,
  useAddFeedbackMutation,
  useUpdateFeedbackMutation,
  useDeleteFeedbackMutation,
  useGetTransactionsQuery,
  useGetTransactionByIdQuery,
  useUpdateTransactionMutation,
  useDeleteTransactionMutation,
  useGetCommentsQuery,
  useGetCommentByIdQuery,
  useAddCommentMutation,
  useUpdateCommentMutation,
  useDeleteCommentMutation,
  useGetProductsQuery,
  useGetProductByIdQuery,
  useAddProductMutation,
  useUpdateProductMutation,
  useDeleteProductMutation,
  useGetDeliveriesQuery,
  useGetDeliveryByIdQuery,
  useAddDeliveryMutation,
  useUpdateDeliveryMutation,
  useDeleteDeliveryMutation,
  useGetAppointmentByBeauticianIdQuery,
  useGetAppointmentHistoryByBeauticianIdQuery,
  useGetBrandsQuery,
  useGetBrandByIdQuery,
  useAddBrandMutation,
  useUpdateBrandMutation,
  useDeleteBrandMutation,
  useGetTimesQuery,
  useGetTimeByIdQuery,
  useAddTimeMutation,
  useUpdateTimeMutation,
  useDeleteTimeMutation,
  useGetSchedulesQuery,
  useGetScheduleByIdQuery,
  useAddScheduleMutation,
  useUpdateScheduleMutation,
  useConfirmScheduleMutation,
  useDeleteConfirmScheduleMutation,
  useDeleteScheduleMutation,
  useUpdateAbsentMutation,
  useGetIngredientsQuery,
  useGetIngredientByIdQuery,
  useAddIngredientMutation,
  useUpdateIngredientMutation,
  useDeleteIngredientMutation,
  useGetOptionsQuery,
  useGetOptionByIdQuery,
  useAddOptionMutation,
  useUpdateOptionMutation,
  useDeleteOptionMutation,
  useGetExclusionsQuery,
  useGetExclusionByIdQuery,
  useAddExclusionMutation,
  useUpdateExclusionMutation,
  useDeleteExclusionMutation,
  useGetMonthsQuery,
  useGetMonthByIdQuery,
  useAddMonthMutation,
  useUpdateMonthMutation,
  useDeleteMonthMutation,
  useUpdateBeauticianAppointmentMutation,
  useGetRescheduleAppointmentByIdQuery,
} = api;
